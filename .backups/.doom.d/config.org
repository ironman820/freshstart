#+TITLE: Configuration

* Basic configuration
** User Variables
#+begin_src emacs-lisp :tangle yes
(setq user-full-name "Nicholas Eastman"
      user-mail-address "nicholas.m.eastman@gmail.com")
#+end_src
** More variables
Close without asking and set the theme
#+begin_src emacs-lisp :tangle yes
(setq confirm-kill-emacs nil)
(setq doom-theme 'doom-one)
(setq visible-bell 1)
#+end_src

Global Auto-revert Mode: makes emacs update buffers when the external file changes.
#+begin_src emacs-lisp :tangle yes
(global-auto-revert-mode 1)
#+end_src
** Fonts
#+begin_src emacs-lisp :tangle yes
(setq doom-font (font-spec :family "FiraCode Nerd Font" :size 12)
      doom-variable-pitch-font (font-spec :family "FiraCode Nerd Font" :size 12)
      doom-big-font (font-spec :family "FiraCode Nerd Font" :size 40))
(after! doom-theme
  (setq doom-themes-enable-bold 1
        doom-themes-enable-italic 1))
(custom-set-faces!
  '(font-lock-comment-face :slant italic)
  '(font-lock-keyword-face :slant italic))
#+end_src
* Org Configuration
#+begin_src emacs-lisp :tangle yes
(after! org
  (require 'org-bullets)
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
  (setq org-directory "~/org/"
        org-default-notes-file (expand-file-name "notes.org" org-directory)
        org-log-done 'time
        org-journal-dir "~/org/journal"
        org-journal-date-format "%B %d, %Y (%A) "
        org-journal-file-format "%Y-%m-%d.org"
        org-hide-emphasis-markers 1))
#+end_src

#+begin_src emacs-lisp :tangle no
(defun dt/org-babel-tangle-async (file)
  "Invoke `org-babel-tangle-file' asynchronously."
  (message "Tangling %s..." (buffer-file-name))
  (async-start
   (let ((args (list file)))
  `(lambda ()
        (require 'org)
        ;;(load "~/.emacs.d/init.el")
        (let ((start-time (current-time)))
          (apply #'org-babel-tangle-file ',args)
          (format "%.2f" (float-time (time-since start-time))))))
   (let ((message-string (format "Tangling %S completed after " file)))
     `(lambda (tangle-time)
        (message (concat ,message-string
                         (format "%s seconds" tangle-time)))))))

(defun dt/org-babel-tangle-current-buffer-async ()
  "Tangle current buffer asynchronously."
  (dt/org-babel-tangle-async (buffer-file-name)))
#+end_src

* Sublimity
Sets up a minimap of the document and shows it on the side.
#+begin_src emacs-lisp :tangle no
(require 'sublimity-scroll)
;;(require 'sublimity-map)
(sublimity-mode 1)
#+end_src
